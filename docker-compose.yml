services: 
  python:
    build:
      context: .
      dockerfile: dockerfiles/python.dockerfile
    ports: 
      - '8888:8888'
    volumes: 
      - ./src:/app

  kafka:
    build:
      context: .
      dockerfile: dockerfiles/kafka.dockerfile
    ports:
      - 9092:9092
    #depends_on:
    #  - zookeeper

  zookeeper:
    build:
      context: .
      dockerfile: dockerfiles/zookeeper.dockerfile
    ports:
      - 2181:2181

  kafka_bitnami:
    image: bitnami/kafka:3.5.2
    ports:
        - "9092:9092"
        - "9094:9094"
    # volumes:
    #     - "kafka_data:/bitnami"
    environment:
        - KAFKA_CFG_NODE_ID=0
        - KAFKA_CFG_PROCESS_ROLES=controller,broker
        - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://0.0.0.0:9094
        - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://172.24.208.1:9094
        - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
        - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
        - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    networks:
        - flink-net
networks:
  flink-net:
    driver: bridge


    

